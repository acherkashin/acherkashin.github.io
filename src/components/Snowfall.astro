---
interface Props {
	count: number;
}

const { count } = Astro.props;
---

<div id="snow-container" aria-hidden="true">
	{new Array(count).fill(0).map((_) => <div class="snowflake text-sky-500 dark:text-white">❄</div>)}
</div>
<script is:inline defer>
	const snowflakes = document.querySelectorAll('.snowflake');

	snowflakes.forEach((snowflake) => {
        const size = Math.random() * 15 + 10; // Размер снежинки от 10 до 30px
		const leftPosition = Math.random() * window.innerWidth; // Случайная позиция по ширине
		const duration = Math.random() * 3 + 10; // Скорость падения (3-6 секунд)
		const delay = Math.random() * 5; // Задержка анимации

		snowflake.style.left = `${leftPosition}px`;
		snowflake.style.fontSize = `${size}px`;
		snowflake.style.animationDuration = `${duration}s`;
		snowflake.style.animationDelay = `${delay}s`;
	});
</script>
<style is:global>

	#snow-container {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		pointer-events: none; /* Чтобы не мешало взаимодействию с элементами */
		/* z-index: -1; */
	}

	.snowflake {
		position: absolute;
		top: -50px;
		font-size: 10px;
		opacity: 0.8;
		animation-name: fall;
		animation-timing-function: linear; /*ease-in-out*/
		animation-iteration-count: infinite;
		will-change: transform;
	}

	@keyframes fall {
		from {
			transform: translateY(0) rotate(0deg);
		}
		to {
			transform: translateY(calc(100vh + 1.5em)) rotate(360deg);
		}
	}
</style>
